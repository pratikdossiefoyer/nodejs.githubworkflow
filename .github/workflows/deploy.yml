name: Deploy to Server
on:
  push:
    branches: [ main ]
jobs:
  deploy:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3
      
      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '18'
          cache: 'npm'
      
      - name: Install dependencies
        run: npm ci
      
      - name: Create env file
        run: |
          echo "PORT=${{ secrets.PORT }}" > .env
          echo "MONGODB_URI=${{ secrets.MONGODB_URI }}" >> .env
      
      - name: Setup SSH key
        uses: webfactory/ssh-agent@v0.7.0
        with:
          ssh-private-key: ${{ secrets.SSH_PRIVATE_KEY }}
      
      - name: Debug SSH connection
        run: |
          echo "Testing connection to ${{ secrets.SSH_HOST }} on port ${{ secrets.SSH_PORT }}"
          # Skip known_hosts check for now
          ssh -o StrictHostKeyChecking=no -o UserKnownHostsFile=/dev/null -p ${{ secrets.SSH_PORT }} ${{ secrets.SSH_USERNAME }}@${{ secrets.SSH_HOST }} "echo Connection successful"
      
      - name: Deploy to server
        run: |
          # Deploy using SSH with strict host checking disabled
          ssh -o StrictHostKeyChecking=no -o UserKnownHostsFile=/dev/null -p ${{ secrets.SSH_PORT }} ${{ secrets.SSH_USERNAME }}@${{ secrets.SSH_HOST }} "mkdir -p ~/nodejs-mongo-api"
          
          # Stop existing application if running
          ssh -o StrictHostKeyChecking=no -o UserKnownHostsFile=/dev/null -p ${{ secrets.SSH_PORT }} ${{ secrets.SSH_USERNAME }}@${{ secrets.SSH_HOST }} "pm2 stop nodejs-mongo-api || true"
          
          # Copy files to server (using scp instead of rsync)
          scp -o StrictHostKeyChecking=no -o UserKnownHostsFile=/dev/null -P ${{ secrets.SSH_PORT }} -r ./* ${{ secrets.SSH_USERNAME }}@${{ secrets.SSH_HOST }}:~/nodejs-mongo-api/
          
          # Install dependencies and start the application
          ssh -o StrictHostKeyChecking=no -o UserKnownHostsFile=/dev/null -p ${{ secrets.SSH_PORT }} ${{ secrets.SSH_USERNAME }}@${{ secrets.SSH_HOST }} "cd ~/nodejs-mongo-api && npm install --production && command -v pm2 || npm install pm2 -g && pm2 restart nodejs-mongo-api || pm2 start src/app.js --name nodejs-mongo-api"
