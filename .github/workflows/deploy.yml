name: Deploy to Server
on:
  push:
    branches: [ main ]
jobs:
  deploy:
    runs-on: self-hosted  # Using self-hosted runner instead of GitHub's runners
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3
      
      - name: Setup Docker
        uses: docker/setup-buildx-action@v2
      
      - name: Build Docker image
        run: docker build -t nodejs-mongo-api .
      
      - name: Create env file
        run: |
          echo "PORT=${{ secrets.PORT }}" > .env
          echo "MONGODB_URI=${{ secrets.MONGODB_URI }}" >> .env
      
      - name: Deploy with manual SSH password
        env:
          SSHPASS: ${{ secrets.SSH_PASSWORD }}
        run: |
          # Install sshpass if not already installed
          which sshpass || sudo apt-get update && sudo apt-get install -y sshpass
          
          # Stop and remove existing container if it exists
          sshpass -e ssh -o StrictHostKeyChecking=no -p 9923 deployadmin@192.168.1.244 "docker stop nodejs-mongo-api || true && docker rm nodejs-mongo-api || true"
          
          # Transfer the Docker image to the server
          docker save nodejs-mongo-api | sshpass -e ssh -o StrictHostKeyChecking=no -p 9923 deployadmin@192.168.1.244 "docker load"
          
          # Transfer the env file
          sshpass -e scp -o StrictHostKeyChecking=no -P 9923 .env deployadmin@192.168.1.244:~/nodejs-mongo-api-env
          
          # Run the Docker container on the server
          sshpass -e ssh -o StrictHostKeyChecking=no -p 9923 deployadmin@192.168.1.244 "docker run -d --name nodejs-mongo-api -p \${PORT:-3000}:3000 --restart unless-stopped --env-file ~/nodejs-mongo-api-env nodejs-mongo-api"
