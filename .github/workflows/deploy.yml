name: Deploy to Server

on:
  push:
    branches: [ main ]

jobs:
  deploy:
    runs-on: self-hosted

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Setup SSH key
        run: |
          mkdir -p ~/.ssh
          echo "${{ secrets.SSH_PRIVATE_KEY }}" > ~/.ssh/deploy_key
          chmod 600 ~/.ssh/deploy_key
          echo "Host deploy_target
            HostName 192.168.1.244
            User deployadmin
            Port 9923
            IdentityFile ~/.ssh/deploy_key
            StrictHostKeyChecking no" > ~/.ssh/config

      - name: Setup Docker
        uses: docker/setup-buildx-action@v2

      - name: Build Docker image
        run: docker build -t nodejs-mongo-api .

      - name: Create env file
        run: |
          echo "PORT=${{ secrets.PORT }}" > .env
          echo "MONGODB_URI=${{ secrets.MONGODB_URI }}" >> .env

      - name: Test SSH connection
        run: ssh deploy_target "echo SSH test successful"

      - name: Deploy to server
        run: |
          # Stop and remove existing container if it exists
          ssh deploy_target "docker stop nodejs-mongo-api || true && docker rm nodejs-mongo-api || true"
          
          # Transfer the Docker image to the server
          docker save nodejs-mongo-api | ssh deploy_target "docker load"
          
          # Transfer the env file
          scp .env deploy_target:~/nodejs-mongo-api-env
          
          # Run the Docker container on the server
          ssh deploy_target "docker run -d --name nodejs-mongo-api -p \${PORT:-3000}:3000 --restart unless-stopped --env-file ~/nodejs-mongo-api-env nodejs-mongo-api"
